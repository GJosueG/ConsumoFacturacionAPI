@page "/categorias"
@using Facturacion.DTO
@using Facturacion.Services

<h3>Lista de Categorías</h3>
<link rel="stylesheet" href="css/custom-styles.css" />

@if (categorias == null)
{
    <p><em>Cargando...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>#</th> <!-- Nueva columna para enumeración -->
                <th>Nombre</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var categoria in categorias.Select((value, index) => new { value, index }))
            {
                <tr>
                    <td>@(categoria.index + 1)</td> <!-- Enumerar desde 1 -->
                    <td>@categoria.value.Nombre</td>
                </tr>
            }
        </tbody>
    </table>
}

@if (!string.IsNullOrEmpty(errorMessage))
{
    <div class="alert alert-danger">@errorMessage</div>
}

@inject CategoriaService categoriaService

@code {
    private List<CategoriaResponse> categorias;
    private string errorMessage;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            categorias = await categoriaService.GetCategorias();
        }
        catch (Exception ex)
        {
            errorMessage = ex.Message;
        }
    }
}
