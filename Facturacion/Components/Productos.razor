@page "/productos"
@using Facturacion.DTO
@using Facturacion.Services

<h3>Lista de Productos</h3>
<link rel="stylesheet" href="css/custom-styles.css" />

@if (productos == null)
{
    <p><em>Cargando...</em></p>
}
else
{




    <table class="table">
        <thead>
            <tr>
                <th>#</th>
                <th>Nombre</th>
                <th>Precio</th>
                <th>Stock</th>

            </tr>
        </thead>
        <tbody>
            @foreach (var producto in productos.Select((value, index) => new { value, index }))
            {
                <tr>
                    <td>@(producto.index + 1)</td> <!-- Enumerar desde 1 -->
                    <td>@producto.value.Nombre</td>
                    <td>@producto.value.Precio</td>
                    <td>@producto.value.Stock</td>
                </tr>
            }
        </tbody>
    </table>
}

@inject ProductoService productoService
@code {
    private List<ProductoResponse> productos;
    private string errorMessage;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            productos = await productoService.GetProductos();
        }
        catch (Exception ex)
        {
            errorMessage = ex.Message;
        }
    }
}
